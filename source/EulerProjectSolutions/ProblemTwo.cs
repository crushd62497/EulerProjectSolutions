using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EulerProjectSolutions
{
    /* 
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     * 
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * 
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     */
    class ProblemTwo
    {

        private int answer;
        private int maxFibonacchi;

        public ProblemTwo(int maxFibonacchi)
        {
            this.maxFibonacchi = maxFibonacchi;
            answer = this.sumFibonacciNumbers(this.getFibonacciNumbers(maxFibonacchi));
        }

        public int sumFibonacciNumbers(List<int> fibonacciNumbers)
        {
            int sum = 0;
            foreach(int value in fibonacciNumbers)
            {
                if(value % 2 == 0)
                {
                    sum += value;
                }
            }

            return sum;
        }

        public List<int> getFibonacciNumbers(int maxNumber)
        {
            int firstNumber = 0;
            int secondNumber = 1;
            int fibonacciNumber = 0;
            List<int> fibonacciNumbers = new List<int>();
            while (firstNumber + secondNumber < maxNumber)
            {
                fibonacciNumber = firstNumber + secondNumber;
                firstNumber = secondNumber;
                secondNumber = fibonacciNumber;
                fibonacciNumbers.Add(fibonacciNumber);
            }

            return fibonacciNumbers;
        }

        public int getAnswer()
        {
            return this.answer;
        }

    }
}
